// --------------------
// Definition of variables
$primary:black;



.navigation{
  background-color: black !important;
}

// ----------------------------------------
// To install Boostrap:
// 1) Run in the client folder: $ npm i bootstrap
// 2) Import bootstrap with the following line
// @import '../node_modules/bootstrap/scss/bootstrap.scss';
// 
// To install Reactstrap:
// 1) Run in the client folder: $ npm i reactstrap
// 2) Go to the official documentation and take some examples: https://reactstrap.github.io/
// import { Button } from 'reactstrap';
// <Button color="danger">Danger!</Button>
// ----------------------------------------


// --------------------
// Style reusable for all components
.homepage {
  margin: 0;
  padding: 0;
  background-image: url("./images/home.png");
  background-size: cover;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-position: 90%;
  width:100vw;
  height:120vh;
  color: white;
}

.info {
  margin: 20px;
  padding: 10px 20px;
  border-radius: 10px;
  display: inline-block;
  background-color: #5776e9;
  color: white;
}

.info.info-danger {
  background-color: #e73f3f;
}
// body {
//   background-color: red !important;

// }
// --------------------
// Style for App component
.App {
  text-align: center;
  // width: 100vw;

  .App-logo {
    animation: App-logo-spin infinite 20s linear;
    height: 80px;
  }

  .App-header {
    background-color: $primary;
    padding: 20px;
    color: white;

    a {
      color: white;
      padding: 0 5px;
      text-decoration: unset;
    }

    a.active {
      font-weight: bold;
    }
  }

  .App-title {
    font-size: 1.5em;
  }

  .App-intro {
    font-size: large;
  }

  @keyframes App-logo-spin {
    from {
      transform: rotate(0deg);
    }

    to {
      transform: rotate(360deg);
    }
  }
}

// --------------------
// Style for Home component
.Home {
  p {
    font-size: 1.2em;
  }
}

.characterscard {
  width: 300px;
  margin: 40px;
}
.comicscard{
  width: 300px;
  margin: 40px;
}

img.bio-image{
  width: 15vw;
 height: 250px;
}

div.col.caption h2{
  font-size: 30px;
  color:white;
}

div.col.caption h3{
  font-size: 28px;
  color: white;
}

div.characterspage{
  background-image: url("./images/marvelbackground.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-position: 50%;
  font-family: 'Bangers', cursive;
  width:100vw;
  height:120vh;

  // background-size: cover;
}

div.characterdetails{
  background-color: rgb(155, 1, 3);
  font-family: 'Bangers', cursive;
}

div.card-body.comics h3{
  font-size: 16px;
}

div.card-body.comics h4{
  font-size: 13px;
}
div.container-fluid{
  width: 30%;
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
  font-family: 'Bangers', cursive;
  color: white;
}
nav.navbar.navbar-inverse{
 color: rgb(20, 20, 20);
}
a.navbar-brand{
  color: white;
}

h1.App-title{
  font-family: 'Bangers', cursive;
  color: rgb(155, 1, 3);
  font-size: 40px;
}

div.hometitle{
  font-family: 'Bangers', cursive;
  color: white;
  font-size: 25px;
}
// .characterslist {
//   width: 18vw;
//   background: black;
//   height: 350px;
//   margin: .5vh .5vw;
//   border-radius: 25px;
//   // display: flex;
// }

// .comicslist{
//   width: 20vw;
//   background: black;
//   height: 350px;
//   margin: .5vh .5vw;
//   border-radius: 25px;
//   display: inline-flex;
//   flex-wrap: wrap;

// }
// .comicslist img{
//   margin: auto;
// }

// .comicslist h3 {
//   font-size: 10px;
//   color: white;
//   text-align: center;
// }

// .comicslist h4{
//   font-size: 8px;
//   color: white;
// }
// .characterslist:hover {
//   background: red;
//   transition: .5s;
// }

// // .characterslist h4 {
// //   font-size: 2vh;
// //   color: white;
// // }

// img.charactersimg {
//   width: 15vw;
//   height: 250px;
// }

// img.comicsimg {
//   width: 15vw;
//   height: 250px;
// }


// .entire-list {
//   display: flex;
//   width: 100vw;
//   flex-wrap: wrap;
//   margin-left: 2vw;
// }

// .searchbar {
//   margin-bottom: 2vh;
// }

// // .character-bio {
// //   // display: flex;
// // }

// .bio-image {
//   width: 25vw;
//   position: relative;
//   right: 30vw;
//   margin-top: 8vh;
// }

// .caption {
//   width: 50vw;
//   position: relative;
//   left: 42vw;
//   bottom: 52vh;
// }
// .whole-list {
//   display: flex;
// }
// @media (min-width: 1281px) {
  
//   //CSS
  
// }
// // --------------------
// // Style for Secret component
// /// Create the same keyframes twice (for retrigger in pure CSS)
// /// @author Gregor Adams
// /// @param  {Keyword} $name - name of the animation (will be suffixed with --1 and --2)
// @mixin double-keyframes($name) {
//   // write the keyframe rules to the document root
//   @at-root {
//     // write the same keyframes twice
//     @for $i from 1 through 2 {
//       $keyframe-name: unquote($name + "--" + $i);

//       @keyframes #{$keyframe-name} {
//         @content;
//       }
//     }
//   }
// }
// @import url(https://fonts.googleapis.com/css?family=Passion+One);
// body {
//   background: #D30215;
//   overflow: hidden;
//   margin: 0;
//   font-family: 'Passion One', impact;
// }
// .bg {
//   position: absolute;
//   top: 20%; right: 0; bottom: 0; left: 0;
//   background: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/28359/marvel.jpg');
//   animation: fade 6s steps(30) forwards;

//   @for $i from 1 through 2 {
//     #retrigger--#{$i}:checked ~ & {
//       animation-name: fade--#{$i};
//     }
//   }

//   @include double-keyframes(fade) {
//     0% {
//       background-position: 0 0;
//       opacity: 1;
//     }
//     50% {
//       background-position: 2000% 2000%;
//       opacity: 0.6;
//     }
//     100% {
//       background-position: -2000% -2000%;
//       opacity: 0;
//     }
//   }
// }
// .pane {
//   position: absolute;
//   top: 50%;
//   left: 50%;
//   transform: translate(-50%, -50%) scaleY(1.3);
//   perspective: 700px;
// }

// .rotate {
//   position: absolute;
//   top: 50%;
//   left: 50%;
//   transform: 
//     translate(-50%, -50%)
//     rotate3d(1,-1,0,40deg)
//     scale(2);
//   transform-style: preserve-3d;
//   animation: rotate 6s 2s forwards;
//   @for $i from 1 through 2 {
//     #retrigger--#{$i}:checked ~ .pane & {
//       animation-name: rotate--#{$i};
//     }
//   }
  
//   @include double-keyframes(rotate) {
//     0% {
//       transform: 
//         translate(-50%, -50%)
//         rotate3d(1,-1,0,40deg)
//         scale(2);
//     }
//     50% {
//       transform: 
//         translate(-50%, -50%)
//         rotate3d(0,-0,0,0deg)
//         scale(1.1);
//     }
//     100% {
//       transform: 
//         translate(-50%, -50%)
//         rotate3d(0,-0,0,0deg)
//         scale(1);
//     }
//   }
// }

// .logo {
//   position: absolute;
//   top: 50%;
//   left: 50%;
//   transform-style: preserve-3d;
//   transform: translate(-50%, -50%);;
//   font-size: 9em;
//   letter-spacing: -0.06em;
//   animation: hide 8s linear forwards;
//   padding: 0 0.2em;
//   line-height: 1;
//   border: 0.02em solid black;
//    @for $i from 1 through 2 {
//     #retrigger--#{$i}:checked ~ .pane & {
//       animation-name: hide--#{$i};
//     }
//   }
    
//   &:nth-child(1) {
//     animation: change 8s steps(30) forwards;
//      @for $i from 1 through 2 {
//     #retrigger--#{$i}:checked ~ .pane & {
//         animation-name: change--#{$i};
//       }
//     }
//     background: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/28359/marvel.jpg');
//     background-size: 2000px auto;
  
//   -webkit-background-clip: text;
//   -webkit-filter: 
//     drop-shadow(0   -1px 0 black)
//     drop-shadow(0    1px 0 black)
//     drop-shadow(1px  0   0 black)
//     drop-shadow(-1px 0   0 black);
//  //-webkit-text-fill-color: rgba(150,150,0,0.3);
//     color: transparent;

//   }
  
//   @for $i from 2 through 20 {
//     &:nth-child(#{$i}) {
//       transform: translate3d(-50%,-50%, $i *-1px);
//     }
//   }

//  @include double-keyframes(hide) {
//    0% {
//      visibility: visible;
//      opacity: 1;
//    }
//    100% {
//      visibility: hidden;
//      opacity: 0;
//    }
//  }
  
//   @include double-keyframes(change) {
//     0% {
//       background-position: 0 0;
//       color: rgba(150,150,0,0.4);
//       -webkit-filter: 
//     drop-shadow( 0  -1px 0 black)
//     drop-shadow( 0   1px 0 black)
//     drop-shadow( 1px 0   0 black)
//     drop-shadow(-1px 0   0 black);
//       border-color: black;
//     }
//     50% {
//       background-position: 200% 200%;
//       color: rgba(150,150,0,0.4);
//       -webkit-filter: 
//     drop-shadow( 0  -1px 0 black)
//     drop-shadow( 0   1px 0 black)
//     drop-shadow( 1px 0   0 black)
//     drop-shadow(-1px 0   0 black);
//       border-color: white;

//     }
//     100% {
//       background-position: -200% -200%;
//       color: white;
//       -webkit-filter: 
//     drop-shadow(0 0 0 white)
//     drop-shadow(0 0 0 white)
//     drop-shadow(0 0 0 white)
//     drop-shadow(0 0 0 white);
//       border-color: white;

//     }
//   }
// }




// // hide the radios that allow us to retrigger the animation
// .retrigger {
//   position: absolute;
//   left: -5em;
//   opacity: 0;
// }

// // the section containing the retrigger button
// @include double-keyframes(buttons) {
//   0%,99% {
//     visibility: hidden;
//   }
//   100% {
//     visibility: visible;
//   }
// }
// .buttons {
//   position: absolute;
//   z-index: 3;
//   top: 1em;
//   left: 50%;
//   width: 10em;
//   margin-left: -5em;
//   height: 2em;
//   line-height: 2em;
//   text-align: center;
//   cursor: pointer;
//   user-select: none;
//   animation: button 8s linear;
//   @for $i from 1 through 2 {
//     #retrigger--#{$i}:checked ~ & {
//       animation-name: buttons--#{$i};
//     }
//   }
  
//   // the labels are disguised as buttons
//   .button {
//     padding: 0.3em 1em;
//     color: black;
//     font-size: 1.3em;
//     display: none;
//     cursor: pointer;
//     border: 2px solid black;
//     &:hover {
//       color: white;
//       background: black;
//     }
//     // display the label for the unchecked input
//     @for $i from 1 through 2 {
//       &--#{$i} {
//         #retrigger--#{$i % 2 + 1}:checked ~ & {
//           display: block;
//         }
//       }
//     }
//   }
// }